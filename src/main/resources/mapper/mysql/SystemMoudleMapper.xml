<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fly.dao.mysql.permission.SystemModuleMapper">
    <resultMap id="BaseResultMap" type="com.fly.pojo.SystemModule">
        <id column="moduleId" jdbcType="INTEGER" property="moduleid"/>
        <result column="parentId" jdbcType="INTEGER" property="parentid"/>
        <result column="parentName" jdbcType="VARCHAR" property="parentName"/>
        <result column="moduleName" jdbcType="VARCHAR" property="modulename"/>
        <result column="moduleWeight" jdbcType="INTEGER" property="moduleweight"/>
        <result column="moduleUrl" jdbcType="VARCHAR" property="moduleurl"/>
        <result column="moduleCreateTime" jdbcType="TIMESTAMP" property="modulecreatetime"/>
        <result column="moduleLastUpdateTime" jdbcType="TIMESTAMP" property="modulelastupdatetime"/>
    </resultMap>
    <sql id="Base_Column_List">
    moduleId, parentId, moduleName, moduleWeight, moduleUrl, moduleCreateTime, moduleLastUpdateTime
  </sql>
    <select id="selectSystemModule" resultMap="BaseResultMap">

      select m.*,t.moduleName as parentName from moduletb m left join moduletb t
      on m.parentId = t.moduleId order by m.moduleWeight

  </select>

    <insert id="insertRoleModule">
        insert into rolemoduletb (roleId, moduleId) values
        <foreach collection="module" item="module_id" separator=",">
            (#{role},#{module_id})
        </foreach>
    </insert>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from moduletb
        where moduleId = #{moduleid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from moduletb
    where moduleId = #{moduleid,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.fly.pojo.SystemModule">
    insert into moduletb (moduleId, parentId, moduleName, 
      moduleWeight, moduleUrl, moduleCreateTime, 
      moduleLastUpdateTime)
    values (#{moduleid,jdbcType=INTEGER}, #{parentid,jdbcType=INTEGER}, #{modulename,jdbcType=VARCHAR}, 
      #{moduleweight,jdbcType=INTEGER}, #{moduleurl,jdbcType=VARCHAR}, #{modulecreatetime,jdbcType=TIMESTAMP}, 
      #{modulelastupdatetime,jdbcType=TIMESTAMP})
  </insert>


    <insert id="insertSelective" parameterType="com.fly.pojo.SystemModule" useGeneratedKeys="true"
            keyProperty="moduleid">
        insert into moduletb
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="moduleid != null">
                moduleId,
            </if>
            <if test="parentid != null">
                parentId,
            </if>
            <if test="modulename != null">
                moduleName,
            </if>
            <if test="moduleweight != null">
                moduleWeight,
            </if>
            <if test="moduleurl != null">
                moduleUrl,
            </if>
            <if test="modulecreatetime != null">
                moduleCreateTime,
            </if>
            <if test="modulelastupdatetime != null">
                moduleLastUpdateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="moduleid != null">
                #{moduleid,jdbcType=INTEGER},
            </if>
            <if test="parentid != null">
                #{parentid,jdbcType=INTEGER},
            </if>
            <if test="modulename != null">
                #{modulename,jdbcType=VARCHAR},
            </if>
            <if test="moduleweight != null">
                #{moduleweight,jdbcType=INTEGER},
            </if>
            <if test="moduleurl != null">
                #{moduleurl,jdbcType=VARCHAR},
            </if>
            <if test="modulecreatetime != null">
                #{modulecreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="modulelastupdatetime != null">
                #{modulelastupdatetime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fly.pojo.SystemModule">
        update moduletb
        <set>
            <if test="parentid != null">
                parentId = #{parentid,jdbcType=INTEGER},
            </if>
            <if test="modulename != null">
                moduleName = #{modulename,jdbcType=VARCHAR},
            </if>
            <if test="moduleweight != null">
                moduleWeight = #{moduleweight,jdbcType=INTEGER},
            </if>
            <if test="moduleurl != null">
                moduleUrl = #{moduleurl,jdbcType=VARCHAR},
            </if>
            <if test="modulecreatetime != null">
                moduleCreateTime = #{modulecreatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="modulelastupdatetime != null">
                moduleLastUpdateTime = #{modulelastupdatetime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where moduleId = #{moduleid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fly.pojo.SystemModule">
    update moduletb
    set parentId = #{parentid,jdbcType=INTEGER},
      moduleName = #{modulename,jdbcType=VARCHAR},
      moduleWeight = #{moduleweight,jdbcType=INTEGER},
      moduleUrl = #{moduleurl,jdbcType=VARCHAR},
      moduleCreateTime = #{modulecreatetime,jdbcType=TIMESTAMP},
      moduleLastUpdateTime = #{modulelastupdatetime,jdbcType=TIMESTAMP}
    where moduleId = #{moduleid,jdbcType=INTEGER}
  </update>

    <select id="queryModuleTreeByRoleID" parameterType="Integer[]" resultMap="BaseResultMap">

        select m.* from rolemoduletb roleAndModule inner join
        moduletb m on roleAndModule.moduleId = m.moduleId
        where roleAndModule.roleId in
        <foreach collection="array" item="role" open="(" close=")" separator=",">
            #{role}
        </foreach>
        order by m.moduleWeight

    </select>

    <select id="selectSystemModuleByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">

    select * from moduletb m where m.moduleId in
    (
      select r.moduleId from rolemoduletb r where r.roleId = #{role}
    )
  </select>

    <select id="selectSystemModuleByNotRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
            select * from moduletb m where m.moduleId not in
    (
      select r.moduleId from rolemoduletb r where r.roleId = #{role}
    )
    </select>

    <delete id="deleteRoleModuleByModuleAndRole">
        delete from rolemoduletb where moduleId = #{module} and roleId = #{role}
    </delete>

    <insert id="insertAdminAppendModule" parameterType="java.lang.Integer">
        insert into rolemoduletb (roleId, moduleId) values (1 , #{moduleid})
    </insert>

</mapper>